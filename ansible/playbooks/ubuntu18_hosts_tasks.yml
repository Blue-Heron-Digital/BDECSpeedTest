---
## Install base packages
- name: Update apt and install packages for Ubuntu hosts
  become: yes
  become_method: sudo
  become_user: root
  apt:
    update_cache: yes
    name: "{{ item }}"
    state: latest
  with_items:
    - apache2-utils
    - postgresql
    - postgis
    - postgresql-client
    - nginx
    - uwsgi-plugin-python
    - git
    - python-psycopg2
    - python-dev
    - python-pip
    - python-setuptools
    - gdal-bin
    - unzip
    - python-apt
    - certbot

# TO DO: install python-pip using easy_install instead of apt
# $ easy_install pip
# $ ln /usr/local/bin/pip /usr/bin/pip

## Generate and Install SSL/TLS Certificates
#
# By default, Piecewise uses EFF's certbot tool to obtain SSL/TLS certificates from the 
# LetsEncrypt CA for production deployments, and generates self-signed SSL/TLS certificates 
# for development deployments.
#
# If you want to use SSL/TLS certificates from another source, in your fork's code comment out 
# or delete the section below, install your certificates manually on your server where 
# appropriate for your system, and update the ssl certificate variables for development 
# and production in: ansible/piecewise_global_config.yml

#- name: Add jessie-backports to apt configuration
#  apt_repository:
#    repo: deb http://ftp.debian.org/debian jessie-backports main
#    state: present
#    update_cache: yes

#- name: Install EFF Certbot
#  apt:
#    name: certbot
#    state: present
#    default_release: jessie-backports

## Deploy configs specfic to Ubuntu 9 systems
- name: Deploy configs for Ubuntu systems
  become: yes
  become_method: sudo
  become_user: root
  copy:
    src: "files/ubuntu18/"
    dest: /
    owner: root
    group: root

## Fix Postgres config file permissions
- name: Fix postgres configuration permissions for Ubuntu systems
  become: yes
  become_method: sudo
  become_user: root
  file:
    path: /etc/postgresql/10/main/pg_hba.conf
    state: file
    owner: "{{ database_user }}"
    group: "{{ database_user_group }}"
    mode: 0640

## NGINX configs for Ubuntu
- name: For Ubuntu development systems, create the nginx default site for Piecewise
  become: yes
  become_method: sudo
  become_user: root
  template:
    src: "templates/nginx_development_default.j2"
    dest: /etc/nginx/sites-available/default
  when: 
    - env == "development"

- name: For Ubuntu production systems, create the nginx default site for Piecewise
  become: yes
  become_method: sudo
  become_user: root
  template:
    src: "templates/nginx_production_default.j2"
    dest: /etc/nginx/sites-available/default
  when: 
    - env == "production"

- name: Create a link to enable the nginx default site if Ubuntu 
  become: yes
  become_method: sudo
  become_user: root
  file:
    src: "/etc/nginx/sites-available/default"
    dest: "/etc/nginx/sites-enabled/default"
    state: link

